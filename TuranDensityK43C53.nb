(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    182391,       3185]
NotebookOptionsPosition[    181823,       3166]
NotebookOutlinePosition[    182208,       3183]
CellTagsIndexPosition[    182165,       3180]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["x", "2"], "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"3", "-", 
         RowBox[{"Sqrt", "[", "3", "]"}]}], "2"], "-", "x"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"3", "-", 
         RowBox[{"Sqrt", "[", "3", "]"}]}], "2"], "-", "y"}], ")"}]}], "+", 
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox["y", "2"], "2"], "+", 
       RowBox[{"y", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"3", "-", 
            RowBox[{"Sqrt", "[", "3", "]"}]}], "2"], "-", "y"}], ")"}]}]}], 
      ",", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"2", "*", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "-", "3"}], "2"], "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"3", "-", 
            RowBox[{"Sqrt", "[", "3", "]"}]}], "2"]}], ")"}], "2"]}]}], "]"}],
     "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        FractionBox[
         RowBox[{"3", "-", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "2"]}], ")"}], "2"], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}], ")"}], "2"]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{"Maximize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{
       RowBox[{"x", "\[GreaterEqual]", "0"}], "&&", 
       RowBox[{"x", "\[LessEqual]", 
        FractionBox[
         RowBox[{"3", "-", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "2"]}], "&&", 
       RowBox[{"y", "\[GreaterEqual]", "0"}], "&&", 
       RowBox[{"y", "\[LessEqual]", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"3", "-", 
           RowBox[{"Sqrt", "[", "3", "]"}]}], "2"]}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Sqrt", "[", "3", "]"}]}], "-", "3"}], "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     FractionBox[
      RowBox[{"3", "-", 
       RowBox[{"Sqrt", "[", "3", "]"}]}], "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"3", "-", 
        RowBox[{"Sqrt", "[", "3", "]"}]}], "2"]}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.951363639302064*^9, 3.9513636531713037`*^9}, {
  3.9513637012289457`*^9, 
  3.9513637200352874`*^9}},ExpressionUUID->"dff0a867-89a8-41ba-aa00-\
44577d7dc8b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], "+", 
    SqrtBox["3"]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9513637224631777`*^9},ExpressionUUID->"8f276be9-4b19-4ea3-bd16-\
de5431b4180f"],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
nmnOYnBpz3Q8j8GlPYfL8Rwux3O4HM/hcjyHy/EcLscznU81g0t7DpfjOZzh
eejHxO2i95doz7I5i8HBs+x4HoODZ5qDZ5qDZ5qDZ5qDZ5qDZ5qDZ9n5VDM4
eKY5eKa59HhOkDOeac5icOnxTMfzGFx6PCfIGc8JcsZzgpzxnCBnPCfIGc8J
csYznU81g0uP5wQ54zmB4fmzIa+t6P0l2rNszmJw8Cw7nsfg4Jnm4Jnm4Jnm
4Jnm4Jnm4Jnm4Fl2PtUMDp5pDp5pLl032HLqBs1ZDC5dN+h4HoNL1w02wzPN
pesGm+GZ5tJ1g83wTHPpukHnU83g0nWDzfBMc/BsJnl/ifYsm7MYHDzLjucx
OHimOXimOXimOXimOXimOXimOXiWnU81g4NnmoNnmoPnY+J6ksXwLJuzGBw8
y47nMTh4pjl4pjl4pjl4pjl4pjl4pjl4lp1PNYODZ5qDZ5qDZ9brS9dE7y/R
nmVzFoODZ9nxPAYHzzQHzzQHzzQHzzQHzzQHzzQHz7LzqWZw8Exz8Exz8PxF
XLcLGJ5lcxaDg2fZ8TwGB880B880B880B880B880B880B8+y86lmcPBMc/BM
c/CsEjQnVvT+Eu1ZNmcxOHiWHc9jcPBMc/BMc/BMc/BMc/BMc/BMc/AsO59q
BgfPNAfPNJdeb5TIWW/QnMXg0usNOp7H4NLrjRKGZ5pLrzdKGJ5pLr3eKGF4
prn0eoPOp5rBpdcbJQzPNAfPM+ZPHiB6f4n2LJuzGBw8y47nMTh4pjl4pjl4
pjl4pjl4pjl4pjl4lp1PNYODZ5qDZ5qD55XidUgZw7NszmJw8Cw7nsfg4Jnm
4Jnm4Jnm4Jnm4Jnm4Jnm4Fl2PtUMDp5pDp5lewiU3Cf6MPzTvEfsJjfReyw0
l77f9GEc39Dx817Re1b08WkOx5fH5eVP9yEhnuYQL88P/Xf/xR+X/LtcMY+J
8TQSvR9Fc4hfqlg0RPQ+FR1Pc2nPzOPLzv+43Pzp40M8fRzp8+XKyEde/rL/
bgjerzpp/oTh7SyyJTwGv4f2IWTZ+fqILMwh3k75Y0CHcVlIwdcteKFDCo4X
8F5rdvEVYI73w74P5m2YKZAch43jeRu0bvQP4WMO8ZdHzLn15gAfjb7hv77e
QoDjo7dHe7Z/zcMc4uP+aC2ZWM9DbcV/Nw/H239K9NxoRjjEpye3Rfa7eehd
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
7PLgvij/8RVFj1v361aWnokyepSL1qvumDYrhPSR9M+wVPQMc1GHx5+qbjaQ
PtJA48pt/StyUPnixc1Dp5F+naJS+8z2TjnI3L9jw9qzpI/0Ok1Hs1EpB3Hv
dUWKzaSPlOdm6vL0SjaapH/tWtdNpF8XM9mlJH18NvKav4x9rpT0kS7J6ddl
Ksa+FuVvoxy9MGsJ8fxvXshFJx919OmsSjz7uba7IcrfYvn70rmfSH9jt3i+
ENbTr4caf/0m/Q3zpuWrRPmztac9fj+TeJ4lnkeyEavi9cAfycTzkK3XVDKE
+Xc5mGjQul+X22u291+vAuT76ENgpinpIyHx/FiATPs9Lo57TPpI0YVbaxv6
FaBmpaC/i7RIv85QPG/mo6M/b98+d5b0kcb21XAP2ZiPst5o21Z0Jp57iufT
POQ4tbjzZR/Sr/vuZ6O370Qeehb30Nq+O/FcKadf5xlpGiLKPyy6tNO6B6SP
9K1zvYko/1UaXh26HyV9JNvtLn9F+as1T1j+dg/xHOfbd60o/08Dd2b+PEc8
XzOc/ViUf2b9MIvDb8i62qPdNlU/Yf7anS7o1B0lnm1SfO1E+XvFrpXq1zVl
sKasnVCEDm23N5g5OAV7thpk/DLvVyH6+Kh6gb5WKvZc6l4ZMJdXiLYE791g
rk76dQuf75od51+Irj5nffsSRPpICVPbfxi9rhD9mfk7ctYo0q8bfeHilZvD
C1Fc87YNExJJH+n6Zx2jXh8LUMqtXT9aTEm/roecfl3o2qwVovwHT3K7YqVG
PP+bfwvRAeU7/YKbSX/jlPrHSFH+X55fsV/7k/Q3/s3LhWjgsg2nBo0hnp0K
eiuPEeZv6brwdEIg8Vwnnq8LUVVdp9v9DInn1SdnbRHlH3jsYe/W/bqejuNe
xVQWoybt4+HXUkgf6d86pBg1vzK+EfSJ9JFaRq4yuLa7GJnNix52Y1QK9vxv
fVKMllofSPq2OZX0n+sOBB3vWIw23fHrMsKE9OuWidctRajLnnUXyj6RPlLG
9eCWnUFFaHy7AG/9y6RfN0lOvy5LyaDdY2H++f63flUcIH2kmZtLH4ryVzhi
l5m+g3h+kG6zQZT/d4UROv5HiefBA3917inMv/zookV2XNLfOH/gdLwo/4s1
QSZX5xPPHZ4N3ibK/+XO+aeCuhDPrlNi1XYJ8zf4kLSxdb9uskbohW4nS9GO
W2NsIlxJH+nufv15nmalKLHg7qMrL0gfSeNJ7seWgaXIX+nEtA0GSdizr96m
6zvelKClP3dFm95Kxp7b+H9ZXBNTguoXxnXWUyD9OqcPx3+sOlSCdj96+OiE
LvH80ljjbrbQ64Rn3bvqviJ9pDVy+nXvo+OjRfnH8I3H5DWQ/oaleJ1TimoP
lirseEX6G0U7qrp8F+Y/3Kbs5OnOxPN88fqnBOkkTvz93JJ4jhvRYbsof4eB
I28N+0L6G//WRSVI775htX0xuX8Mqh3DFuXv/f6QVL/OnKe5wHZKGbpi6XHi
8HLSR8oWr/fKkL5Dy+GJDaSPNOvo/Jsrcp4gd99dLe92JWDP/9aBT9DEQ8sL
f3wmfaQhM+1/zdj0BDnuyB43fBfp1/1bHz5BOdYCe/8PKdhzx5aA1cObS1Gm
9kef8mnEs5ucfp3qRl0rUf4F/+0do7eGePZIYncTvec2VLGuNMSaeP7ad02y
KH+XruF+ZhdIH8lm31tbUf6dW/rfdvpF+kjPSw72mSnMv2b868OrgonnJRN6
cMX5X+oZ4n2J9JEu/m4w5HBs0QjBhIuLP2Rj//3+/OOdF+5ziHpAzss8Sd+p
7YjPw7/tJff1Kadv7xZ5WGeK1iyuicPxqRKe7l3ZsbqerCfXSM7j3PUHbszN
IRz6XXmvDMd/EpD7Wfx7H486ffqgRO6nfM1rrR3exCC+2RadUdnkfZ7M2vP3
r6Q9RvovZmlqN5L3TH7sMPzGvxCLuHM8u7xaSvoJ/9aHLCQ4p3BZ9P034ONb
fswWfb/LaVuncyIO40RTvA6PRXsmDdhUeZtw66P3fYbMjUO/Lw1re/Yi6T/8
W4c/Rgebi5JMDpL73H/r7RjUacYGt6025D73oJz3fx5I4v3uFzrzvEj/oV5y
/JyI/cWRWeQ+t58kz3d7umm5TiHvpZhK/r37lmVbiL4jB+Pnr8RPrbbttPEe
AnL/K15vx6GbAxUtTt5u9R6FxHOLS6FplQ05j/6S8+KmPKk4249cv/A9tFU+
m/uu8iLnC7jLi+6sUbnkfAGP7HHLfvNccr6A1wz+faH1ecHf35vS8GHEdeIf
+I1lhtc2uRD/+Pt4vbsGW9kT//T35cA/8M7qWXZ/g4h//O/a9c5Er5r4B67k
qVD/ZT7xj49zxMWytX/gLS83f1I+TzwDf7AnM6f6LPEM3OtbBH/Hc9IHPqwy
PWXmvDjhOm23z7544jPysn3ppacsdN3n18hdM/g4f8PF4c2i+LnmI8fpvyH5
uzx73uWyMF5jQuqJz8Yk/1CbLsNEfzc+ZpeVKH/wuZ13fZnF/Dh0MdBFvbmV
TzblE/I/1NQzXRS/KHze79OfyDgxMzQZxz6YgH68OT5B+Td5f+zok079K6Yk
IPuoGy1vbci/68HmjI7NTfEouVvHbvN+k/M16YH7StFxZv5dETrzODlf1jMn
zxEdp5NjhG7H5+Tfezr7wxjRcXJMApLXLSXH95aM/9OpulsiJ/Jx/BbJ9V7m
k/7UwoT4mSCpG9m70ebWfkok/bfiE1yvLybET3uqr4X7qJI+XqZS0fuhHXJw
PvD9nOIUq5CkceS6gO/hdFtZ3pxRTK4L+I7fipnT0asL5N8L/OmHCyFcM5I/
/g7PLn0FiwYyPiH+evObsp33SP1vq5+ZbnMqDm07PrbuhxXpN7q9DEgT8WZz
1NH5DrkeV6tbbXMUHmeJSdmXwD1k3fV5pJOYK5/bbLcsMgv/u+YXmlesuReP
TK08C7Kjyb+rPCZqxKqIeDTPeNb1ngfI8R0vdnJeER6Pzi032HZ8I+k7TXSu
Fh/n04Cc4S9ftXpPbPW0kaLj7Kk/uO9IFLnutk33Fx8nhr0ksIlF5qMjg4Vr
LyHXG3Y9YNg48u+1ftd7jojf2tTvYeerpM5YSfixkJkreliQ805/9w/O+1HJ
8RXKM9WvdszB4z+xy2m/Mt84dMequ1bHaHL9lg1SFPPheWc+fnlH/u64pA5f
F4m+s7cmavCYHeTv0t8dgr+7OyyyWRQ/0W6MQ8kPUk/O3h3MWy3MR3ljt6oB
x8h1Ebi0/KWl0Fu/RTbN7ZRJPvF3A7mi+Pntauc41ZPxlrrURBzvkbHi8hNT
sg6R/b2RGDn7BWIY8ZAPHQ9c9vHZco7PZsTjdTgVD5yOh3FIxwOn4+F80fHA
6Xg4j3Q8jEOaQzx9HIinOZxH+jjA6Xg4v3Q8cDoerkc6HjgdD9cpHQ9ctk/m
d4SA0/Ew/ul44LLHD4xb+vstMQwuPQ7peDaDS4+rcMa4orn0OAlnjBOaS5/3
cMZ5p7n0eQxnnEeaS58XOk/m93CkPdN+QuR8vyWGwcGz7Hg2g4NnmoNnmoNn
moNnmoNnmoNnmoNnmoNnmoNn2Xkyv4cDnmX7gfFMf78lhsGlxzMdz2Zw6fGc
IGc8J8gZzwlyxnOCnPGcIGc8J8gZzwlyxnOCnPFM58n8Ho70eKb9hMj5fksM
g4Nn2fFsBgfPNAfPNAfPNAfPNAfPNAfPNAfPNAfPNAfPsvNkfg8HPMv2EyLn
+y0xDC5dN+h4NoNL1w02wzPNpesGm+GZ5tJ1g83wTHPpusFmeKa5dN2g82R+
D0e6btB+QuR8vyWGwcGz7Hg2g4NnmoNnmoNnmoNnmoNnmoNnmoNnmoNnmoNn
2Xkyv4cDnmX7CZHz/ZYYBgfPsuPZDA6eaQ6eaQ6eaQ6eaQ6eaQ6eaQ6eaQ6e
aQ6eZefJ/B4OeJbtJ0TO91tiGBw8y45nMzh4pjl4pjl4pjl4pjl4pjl4pjl4
pjl4pjl4lp0n83s44Fm2nxA532+JYXDwLDuezeDgmebgmebgmebgmeb4fRiK
g2ea4/eOKA6eaQ6eZefJ/B4OeJbtJ0TO91tiGBw8y45nMzh4pjl4pjl4pjl4
pjl4pjl4pjl4pjl4pjl4lp0n83s44Fm2nxA532+JYXDp9QYdz2Zw6fVGCcMz
zaXXGyUMzzSXXm+UMDzTXHq9UcLwTHPp9QadJ/N7ONLrDdpPiJzvt8QwOHiW
Hc9mcPBMc/BMc/BMc/BMc/BMc/BMc/BMc/BMc/AsO0/m93DAs2w/IXK+sxHD
4OBZdjybwcEzzcEzzcEzzaXf7ypjeKY5eKY5eKY5eKY5eJadJ/N7ONLr5ECG
z2HicX6O4fOTuJ6fYfikv28DPseIj+PJ8BlOfV8F3/eJuS3D5wC9M/NDXQJm
0D7tqfzBJ6LyB59qRtL5g898Kn/wuZPKH9/3UfmDT/v3ozxF7+3TPs0k7+3L
rgO35dTbEIbPruI6f4vhs0V8Xm4wfGaK1znXGD4D5fRd91P5g08rKn/wuZjK
H3xOpvIHn5pU/uBTwUg6f6gDWVT+4LkP70830XvvstcP0QzP8N4+7fnfffpD
hueCmWqmovf2ac8J4nwiGZ5Dzg98297pHsOzn5w+pyaVP3juQeUPnjvuls4f
PP+i8gfP1VT+4JlN5Q+e71L5g2eX3g0Voud9tOcd4nESz/BsmbljlOj5o+x6
y2J4XiT+rlQswzMSj6vHDM8TNVwyRe8b0J5HyulzHqLyB8/OVP7geTuVP3je
QOUPnk2p/MHzXCp/8DyJyh88v3/UYCbaL0B7zhOfx1SG54yeq1tE+x1oz7Hi
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
gT7vNIfzS3M4jzSH8yU7n2oGB/80B8+yPZDn/rRnmoNnmoNn2fE8BgfPNAfP
NDejnvvTnmkOnmkOnmkOnmXnU83g4Jnm4Fm2B/Lcn/ZMc/BMc/AsO57H4OCZ
5uCZ5mbUc3/aM83BM83BM83Bs+x8qhkcPNMcPMv2QJ77055pDp5pDp5lx/MY
HDzTHDzT3Ix67k97pjl4pjl4pjl4lp1PNYODZ5qDZ9keyHN/2jPNwTPNwbPs
eB6Dg2eag2eam1HP/WnPNAfPNAfPNAfPsvOpZnDwTHPwLNsDee5Pe6Y5eKY5
eJYdz2Nw8Exz8ExzM+q5P+2Z5uCZ5uCZ5uBZdj7VDA6eaQ6eZXsgz/1pnzQH
n7LjeQwOPmkOPmluRj33p33SHHzSHHzSHHzKzqeawcEnzcEnzcvv6y1v/dwf
eId0I2WNVs/9gQ+McHnX+rk/8Cnnw/JaP/cHfjfV/mnr5/7AY2I8jVo/9wee
fS1GJ6TVc3/gZWdzrrZ+7g+81ruuyxFPZn+yZdbB1NbP/YEfnKbc0vq5P/D2
Ey+Mb/3cH/hxsX/y3F/aG4fBvwRaT2j93B+4kthnAYP3iN3k1vq5P/DJYp/M
/qGBTzpq/dwfeKjYM7N/OCahRbXAhdk//Oe/lsEvPXz/qPVzf+BRlwdcaP3c
H/jmjOEzWj/3B76TNet+6+f+wG+cvLar9XN/PD5nW3xs/dwfeIX+q5FSz/0l
3HrSbqvWz/2lry/yXEb6Ospn8H/XSxGD/ztfVQx+KrHUoPVzB+nzWMvg/85X
PqPf8u+8FDH49Blsi9bvIQDPmLz8XOv3EKTzKWL0GXaJ/dcyuIWcPsMGOf0B
Qzl9AEs59/v75dzXG8q5f18p5z7dUs79uL2c++79cu6vPf/PfbS8+2V598U0
L5XUT/p+rZ2kftK8v6R+0nyipH7S/I6kftI8WlI/aZ4lqZ80fyKpnzSvkdRP
mn+T1E+au0vqJ80VJfWT5ock9ZO+z3oqqZ80b5TUT5orSuonzVUl9ZPmepL6
SfPZkvpJ8zuS+knz0ZL6SfNHkvpJ8wBJ/aTvdyIk9ZNxHySpn4z7NUn9pHmQ
pH4y7gcl9ZPmzyX1k/F3JfWT5jaS+knfRxyU1E+aZ0vqJ80VJfWT5j6S+knz
7pL6SfPpkvpJr7dHSeonzadJ6ifN0yT1k+bekvpJrzMdJfWT5pvFdWkfY50g
XR8I9wz9F0+vu+C+gOYdJNcRzS9p/j5Bvp8ZiMo/DNrmlQ377G7iefyG3fGJ
/bpkS97PfIJ5Rb8c3eeDeUhR/dNo8r3NUDS8Tfebr2fx0GvxexFX8Xw63KdK
vdY3S/IeQjTmN08pvzBxE6CZAVd+Tuv7BPPfXZrdvm7moSdL07eM+PsU8ytu
TfPdz/KQY+dX+b1ePsf8a9hI9dUfeEj7+QDri9b+eF7r3nX1wu+5fLRG/H7X
A8xNeyQeO6rER2fE73Elkv2btnGCHwd4kve1MjH3WnJq/9WhPFTdXn9HysZS
zK8t8bRVHcJDrhkby+7Nf4r5x/ognXvOPNTjkNecKzrPMR9f9GCJQRMP3Zse
EXGieyXmgbsqNuvd4KPBBxqURd89AK6U9jRI9Hv0J8XvsRzH86+Jy6hFKVY8
9Ebs+R7m6mkD5hamcSXvOyVg7uRt7X9qDVfiPwPzLzEFNy8M4Ere3+BjXpjG
d6lT4kre2yzFfGTNuFL/3Vxk/GusamMDeT6yeMTadyGlXFQnfp+TPB9xDLV4
stGShw7uca3LjqnAPNihUee0Jl/ynmcV5peGbdRcqilAq79ZrRN95wF4uIrH
PtHvwieaqX1xF45/6CdvE1wZEP2Ng9wdH3azVg/HPNXT8+tENw4aPMpxvN2t
OMw/3M+/+VePg+aK33fKwHxtyeuzQ3tx0J7jebMbG8jziA6D8koV+3JQaJt+
6jkxuZjfMVFSXj6Fg7xcnlYa3CHPC65utspzSOcgzcl/DHVPkecCRzOsro3S
4yLWpyGPBjqR/r/LX8cqrRwuWv7AaEDXNRWYW5WV6/oG8tCXx6y5fzSrMOde
8+F/Duaj2eey9n/1J337IoPXTjrtspCvU8V90XcngK8y+hYo+j33gy4rz7Xe
h+go2YeoImc/43Y5+xBfydlv2FfOvkJjOfsHU+TsE2ySs7/vhJx9fIPl7NdL
lLMvj95/ZyjZf0fvs0uV7LPTEdeTm3hervXSHeNUko7O1dp9FtVD4B17e6V8
XMqWfHflP8zhd89tVoxbsVJYD2F+vGLQ+9CQkDQ0m2eV7Cesh8D3c5a17CxN
Q1sHTB+tL6yHwCPXjR1aGZGJ/vxneUFUD4EP++q1cqQL+391nXtYFdUaxlEz
yltqoJke5Ek63uUokYrSkjClVBIxFPKGUXlXzEpU1EzRFDISRE0REdqieEt0
x1X2ZrMHATElO6ZSYipqSCqZNzwe9mZ9a7Hfmf3v75lnZn3fzLzzrvWttYZt
pv024X/fK/j8N/oOHnT68Y7rn3lsDZ/nRnzkrqCOX609zq7x+WzEo864Bub0
yBfzwcS6qqADva4+W8BO8XlfxN38JuZ++nsBm8nndxF3zbg3b881E9/H5jfB
Xfh/sb+J6TD3u3rdpu/phy2OzPLflMO+7Z3p6FOv28SbLAh7cmdGLuu17pM+
IfW6Tfz3JQ7ZE8LymJ/3mpsW3Sb+JG5rTUDEceYY++sOi24T143RfRYxzciS
xjx13F+v28Q/W3KvMMC3gHm1eHWhRbeJh9/tfbQisP49M79z0aLbxDt1zIrv
s7uQHeX71RDfzP83/aZVr9aK7/5Xx84k7nszi3V6NKBsXL1uEy8Z2+3bs2Oz
2XyrjmUJPm7o3tKiZTns5qFuk76u123iZUPTkt2zc1lnq74VCd5/5IqtAY7H
2bniPb9YdJv4hA3Z6a0zDSzcqm9yXK5JSPl8l1Qjazn8770W3Sae1qzrF+dz
C9huq+5VyHU3m1Nfz3UqZIm/7WQW3SZem1m3/Js8M7vJ9+ch/h/+3+ddRelx
YfX6TD7krR23TNXDMllG0K27Fn0mvmr0sNWh27NYtJvxpEWfiU+K85h6r2kO
y9vROtmiz8QXFLx3RVmQy253CP7Mos/EU4PHlcdfz2Npzyx+wfd7OZ6WPzEm
3Kmdgb1p2BFh0WfihzI+zhna3MguRhb8YdFn4vO8Xupf41bAFnndGGPRZ+Ld
Ur17tV1lYmuXOk6y6DPxXX7NvzvX38zKg1+Otegz8Ynter9QOrqIudrsCyT/
sxzG9wWi46fw/yx35ccTz+P/WX7PZv926Q+P2+yLjvMGpa+zHW/MUHEXa7/y
FxXvZbO/uuSfW/vL21XjJ2VWP/+Dii9LD3LxauT3hH/eNW9jY79HPI7rG/KG
cQY5v9d2fOCwii+1tjNHxS9Y+49nVbwqeZSh8bxW4rXWfuUFFX8abTtPlfhI
a3tiVeMtUdZ+0EEVbxj3y1bxhnGhAhXvzff7Qj74YNtVjf0q8bdSetQ29qvE
A7YOC2vsV4lP/nri2cZ+lTjpHvIQ631ZqxovahhXSVfxhnG2LBVvGD8xqvh1
630pUnEHvr8Z8i3WfvRZFU9Jbf5qYx9L/JC1f62e55Oz0dOxtJGPtR23vKTi
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
gHlDjv0FzBty7C9gPrEebbRTp0Y/jPlHjj4Z86B9nhRVvRh9Mt5fVV0b/DNe
Fzn6Z2yP9nrkDBVH/4zPG3L01dhO5Oir8TnRvm6Kqp6Lvhrbr328ScVx/A3j
Qo5+G+NCjn4bn3/tdqao6rPotzFe7eNNKo5+G/UBOfpwzANy9OGYB+Tow1EH
7OUB66rotzEPyNFvYx6Q47gl5gc5+nDMD3L04Zgf7fao69RYX9b2P+gPTSqO
9WXMD3KsLxPH+rK2v0pQ5Qc51pcxP9rtUa8vxjqydh50dvKgs5MHnZ086Ozk
QWcnXp2deHV24sXrqtcXYx1Z218dVsWLHOvIGC9yrCNr+6jDqri0z6/eDxDr
yNr3S2/nfunt3C+9nfult5N/PI96Pz3sb2J70D9jvRvbo328ej0y1ru175fB
zv0y2Mmz2sfSeKO2/kiO47Ta751i5z4qdu6jYuc+Kqq40Dfa3l95PI7rauuV
5Diuq/3+KnaeH2y/er0zjutintHf4vwBzDNynD+AeUaO8wcwn8hx/gDmTbUu
G+YPYN6026NeB43zBzA/2r7dpF5fDPMEMD/IcZ4A5gc5zhPAPCDHeQKYB+Q4
TwDjxf4CzgfAeJHjfACMFznOB8C4tM+v3s8K5wNg+7EfgXV/bD9yrPtjO7XP
o94PCuv+2B70/1jfx/ZoH69eT431fTw/+mqs4+N57B2P/hPn7+H3wt7xyP8P
p3hRAw==
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1: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
elze4/FO7PWhdfI2fB3th8Bfw6OR76f+Ul+EvA3y55BfCB8EPxv7PD8Qfib2
nNQtzstx3LNL61H7kOt6lJgyMu+1MJD6ZEo5eDj1EXnPc0/qa3nm4fBXPHMM
15VpMyrvdTehOFbHc72beoj0i/yq4jNnsnY7ap5Zy7ODv/1ieGpwn+fJV4q9
VybRfkTO86pxPDrnOdP4Hpfzutc6PKq4DrQGrkk856dIHwWPSXd4VvD4X8jz
fy3Y3xkOb4G/ln0KT+QZ1Sj/Rt4fjYt7RPumUXHvTOVZtXIeh0nU1XMexxPy
Hr8Ree+DOsW9cGJx/R+d97rX+j9GfaOuTdlHsylc18x53rVfTy/u2c45t1Ob
BdK1OY+JfNnX9d2J/dTX4CMT+7VvwCMS+4ivwsMT+wfSpesp7TSn1HczxnNT
9/08+a2p50vjr/HSuD0f2897V+Od2Fd+U/OQeH0Ooz9L8/bhXkQ+FPkHjOcq
6q7SW/DlcLfUvvuTtOmXeN0O5N7F1HNSj/e51O/T/hJ+75J6r42kzfK819hQ
eEnee204vCxvf/EFrbHE+/FY7Vvq93jOSmSdU9s18os2RfZj5M9sLNo7m4o2
j+R/RvZx5N9sj+zjdOJZ31EfTN05bzuhbd5tdY98qVm8ow51a+qzKa/As3UO
0u4TeHTid8ln+146KvV60DpckXrNaC/I7+zM72/Ejh+0h1+KHVdoB78Yu2/y
wX6K7BN3oH45dhyiLfxC7HhDV/gt+HLZHMWxXZl67Wmvyd/tgvzN2OtCZ+0v
WofBukLrYXtxLORHSg8M4N5FecdUnpfe4LteZpznSb/Q/iXFROAD4HqUDyPb
iluKz5aP+ZzsRdq04PcXZCPCreDX4AVwW/hV+fzSZRpLeL50WWp7U3MxKbHd
96X2eGJb7At4fGI7Ue89STZKUf9IDx1M36fkrFvb57zPteZuoN0R1N/GjnO8
r32MrAn8GTw28RhovOVHy/b8gPrExPbg5/A4+Df6+RX1kaltxk+Rj0kcK3pC
4wC/RZul1B1o8wa8GG6XOs6leNdK+vAu8ot1HiB/G14Gd0ytqzvofMo7BvOe
vitx7Oc5+LDEtsRS2szNWweuhOflrZe6wQu1/wq2j5vwzKcK9j+bpra1v+E5
E7h+omBbuTHyd+DlOrfgZ4t2fHP4edn6cMvUNv46nXdcv4l8CXX71D7Bt8jP
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
             "]], 
            Polygon3DBox[CompressedData["
1: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
tcecfAwemWKu7g/fC28KzwPvB98DbwJ3hDty/b7wr1w/BO4HPwRvRXwS3Ae+
C94YngifzfMaBd8Kv0VsCPfbxdrG9W/CXdgOhFuIb8b53eCD4QreAl6/juvf
5fzXiG0Ibwd/Ar+h3uL+Q8xtnP+6+o74to3Qs/+Ft3SOl/o6G97KnAJ3gz+F
W9kmwj9x/vrtkePMnV+lyH1t1gT4Z+IbEJ/A9ZeW+fSnvxV8Obw63CS+O3wF
vAbcAu8KXwavBjcc7/Be7P7I/d7m+o3hI+Ca+Cy4K9tBlix4c87fl/ht8AZw
u3q2LXLbFvC+8GU5nucj8DvE+rI9AG8J70d8Nfju8vvtDa8K3wlvBO9lboYf
hIfB+8O1mq58vsHw/PChcCY+DJ4PPgTuAG8Jb8rnOwpug98jtgl8JNwKvwsP
hY/2q8Pvw1vUoa86wR/Bm8PHWnvgD+FV2O6w9sF7cv/u8OHl+WxlbeX8Y+CO
amFia8Irwnfzef/VFjXbueCc+JZn05/4ytZ+4s8SfyeHnviy6Je3c+iJOUV/
qPPV+3tZj6rooeyl7JH+mqPnsveyxzoffiuH/vii6Al7EHsRe7TziL2aQ5/N
LvrzjRz65rOiP+fk0D+/F/31UQ59+0MZPx/m0Lf/K+Prgxz68/synt7PoXe/
K+PxzRz65/OiZ77IoXd+K3rLHs+54Ry5IEfPYO9gD39hjp7A3sB+dnoODa+W
HwrPgJeH34C3hE/L0TPYO4yAZ+bo2ezd7CnOzNHzv1Ke6Uk5PAW9BXuWv+fo
qXzm9gwnww+nyA2Oace2PYu9y3hrYI4e017Tnu/cHD2Kvco4+JIcHoRehD3g
RTl6QHtBe5qL4ZtTeB96IGfBKxB/syV64tPhz3PowV+LXn0lh57+OEW/0bHk
x0WrqH+p9CvzV1FPW4p+nK+KevhLjvrcXkX+/DWHHu5YRX4dDneCj0rRz/6W
Qx/PU0U92AqeBz4yRb88DO4IH5GiXx6do9+bkqI/3wzmIzQOTtG/DoX5r3FQ
iv5UjapWPSxF/75lnjuMGoen8Be2ztHvHZui//8sR7/0S9EX3+fIdx2qyEfd
Sv1fqor+7Pkc8/OdotdfyDG/Z6Xor17OkY8/SNGf/TtHf/Vhin7qPzny80cp
+rnncuSPt4ve9/Orhw5Nob2fzZF/3ir6/+kc+fSN0j+opd93vrENZH/hom9W
qKIe9+ffT+BP2Qaw/12OfF1V0X+aQ8z3qYrc8kyO/PZm6S/0UPRS9CzOyOGx
6bVZw6/M0TPZO002R+WoidZGc3JbHTncXG7O7lxHzjZ3m5PnrUMzqZ3UPN3r
0EBqIZ+5z96cbm63RrfXkcPN5dbkLkV/W9vVYEPaQp996PN1DLC/EZ/pg0Y8
o0Pr0FBqKTXUgnVoMrWZPfiRdXheel96KD3q8FD0UtRwPevQZGozNdkCdfS4
9rp6ZkvUoRHUCmq6rnXoD3uD2Y7potfX0RdphL62J7A3yGxn16GnN6nC81Kf
2xPYG3Rgm0m8F9ucRvymft6j7cGI1Wzn1lHzrH1qlNaitzfmfgOcAzn6gyFw
P5+Hf7+OXqSN68+rQ9Or7f/k2LQ6NL/a/w/4hDp6Mnuz3+Hj6+gp7C0abCfV
ofc34v79ff45eiB7IT2Bxevo8e317ZEWq0PDqmXVzAvVUZOtzWqIa3NoFrWL
GuW6HBpFrWKPcGMOjaZWs0e/NUePbq9uj397Do2p1lSzXpWjp7C3UOPdnEPD
qmXVjFfn8JT1lvWUr8jR49vrq+Huz6Hh1HJqmAdzaDi1nJrh0Ryegt6CnsKd
OTSOWkfN93AOTao2VYNcA1/i2FF7wVPNLSm8KHOUuUoPSS+pKzwyh0ZXqy8P
751Dk6vN1fATc2gWtYua5vEcmkZtcxj8ZI6exN7EHGGuGFiHn/sQ93i+LTxb
vdueHBufw4PTi+sFT1BbpPBO9VB3zdGz2bvpmW6fw2PUa1zf8WF+yOHjH5DC
H7a/fLAlPHHHj56Y3pie8DE5PGG9YT3RKTk8Ub3RwfBx8E45/NUZKfyAHXP4
qyen0Ec75/BPT0mhh67j2s8bkRPWqKL3brXXtn+tolfuwv5U+2P2p9cxlkcW
f3xqHWN/ePHvx3PfLxoxp5d2TaGOuTKi+OGv5+hnPknhd/gdrL0Xpvhuag5r
+5UptIjfydx6UYrvqgZRi12TQpuoKdRaV6XQGmoItdnVKbSFz0yt8o8Uz1LP
Qu/jihRexsl1eAGjyvqCv/l/iS9fxVjQezD3LM12WBW/nc96F/jwKnKQXoE9
vrnphfLbTtA/4NiLZezu6jOtIie+CveuIleao8xV/arItebId+BVq8id5thZ
cJ8qcq854HV4uSpygzn6NXjZKnK3nsub8EpVeDHmkLfglavILebod+HVqsjd
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
             "]], 
            Polygon3DBox[CompressedData["
1:eJwt12WgVVUWAOAL7/Eu71LS0iIlIYiESgrS3SUhjUo49owSjoA6gIKKLeLY
nViEKKmAMRYqktJgEYIKzLc8/FjvnvXttc8578Q+e1ceManXxLypVGqXyCcu
yk2lqmenUiOzUqmv5CXTqdR57EzWl61h+VlNVoR1YUvZyZxUqhI7Lm8snmV7
2ZH8qdQb8m0Osl3UzaRSDdVV0ncw36CusP1dyKqxEexLVoI1YmexIewTVoQ1
ZpXZUPYpO4NdwM5mw9hnrCg7n1Vgg9hAUdxxS7GttguLIqIHa8AqqrtUvl7f
Qvo2Zeew0ewbVprlYR/Kf/E//Cqa6NuE1VA3in+trpS6GiyXtWPvsOOuwTms
EGvKmokRmcQKs87yTnFOrD4rw/rJ1+qba38r9V8himv7hu/3myVW2c4rrlH3
lPY/XefF8mPO7Qr2KBsf/0Me+xNt2Ofa+rFi8hmiuRgqz2d/a/TNFtepe0bf
d8TborC2z/hOv6/LXxMFbG9g2/3miLW284nr9X1W+1tikSik7VP+o99ujlPA
8aaIxmKwvAL/XXtD8bS+e3KSe7RNXlFUEIdy40KkUsttn3D+k6SPq/vD//su
O8rGsgfZBtstbQ+3/15itGOcVLdM3Z/aJmh7TN0JtpT9wcazBewUe5/9xSay
hSzbcVezLHEte5rlZSvlecTV7EnW1XEyjjdZNBKXxrsiitqeLpqJIfEsirTt
aqK7GCFf73gt7GeYvKcYxfqL4rZnihZimHyduubqLpP3ECPZX855ifM4ru1K
bY84l468ivaueZJ9DJC/yd8QBZ37J+p3+H1V/orI2F4f76ffFmrL6dM2T3Kv
usvr8lJ+e6tZFWOEZ7I5q52dvFfxft3o2S3Lfj59z+Le9WFbnd902485v4Wi
DDtXXUl9e/GV9pdjf2XYXnl18QDb6LzqsdLq+rDVLK2uNivKurH3U4GeLce4
R/6m/S8SFRyjjrpi6rrz5crynB4Pymcn71q8c+PVLXec90VRbV+xvX5riTPU
dZUv0/eU9g/FB6KYtq/5vhgPxR7b1cT96r7VfhY7Ka8jzo1r4xgX21d517Kd
KBj3Tv6i2hdErvp16rb67ZUdJ+raiQ7iMnlpvl17JTE33l99evM82iuJjmK4
/GX+ksiv/mO1W/ymxUe2c8QN+j6nfbVYJUpo28gPxP/tmrXTPs6+Bopx9leS
f6u9lLhd28f6LBGLRRFtX/Ddfve79k/a/p99fCGq+n+XqVkqztD+pbY9ucnY
ucJ2SpxSt1k+K8ZytEre1jFny8vxX9XUjWdG21b7mcFbaf9AXUM2U36baM0+
ZI3Y7fENELP0e5FVjPdE30bsjvgWsfJsKLuY/Te+E+wSNp3dylra33LWIExe
XVyr7sG8fz9mqU7q5tnooG5tjP/sbvl80Zl9zJqx++L9EA/o+y6rzSbo25I9
xBazc9kk1pj9hz0fz22MATFms2z7O58/yQ6zsewP+TniYbaf3cM6qftI36bs
Xnk1cU08j0xJqqM/Ndh10Y+5XanOrCb7J3uCFWDd2PnsVvYIK80GsnHsT1Yz
nB1gtdlN8mfUFWI9WIO4J3G+rCwbzOqzf7OHWCk2gDVkt8dYz8qxIawW+xd7
ihVk3eN7yW5kjzOPVKora+XZOM//O4FvZhXVVBVXy+fnTeYuHdRVYf9g97B4
pdqzMewoqyrui7kOO5tdJZ+X9+/HMtUu7pFj1NXpSrCJlVdzMavHxrMfWIV4
9lh9NjHeNVYp5kjilhi/7K8k629/F7K72KusChvNmrB57HVWjY1lo9hhdra4
l/3IBrNd8hJiJvuaDYrxTl5MTGdfxnjAvpPnFzexdew6VsX59WQrWHH5ELFb
XlLcxr5R1yudjAPdXOQ18rViJDvEKsc1VLeDDWcH5eXEnWwz65lO5iNdM8mY
EmPL1ayE47aO8Vhdtnyo2Cc/U8xi36sbxvbLy4jZbBO7jB2QlxVz2A9sBPtJ
Xl7cxbawa2OccIyObAkrKO8jvpfnipvZenV92SZ5RkxmG9hVrKC+TdhL7ARr
4V6ey65g37Ny8fyI4qwVeyOGLXkL8aD8PfetDpuob1N2d9Sw6jGGsutZLX0H
8HWsrHySKMAuivGJ/aVuIsuwC9kL7E82mh2RV4lnmu1k17Cy6jrE2MEKyPuJ
H+QFxBT2ibqL2Fz5azEOszGsP9vMCoqp7FN2KdspLy5msK/YALZFXkhMY5+x
gWyHvKi4lX3ByrtWv8nriYVsW3yn1U2L98pxS7B+rA67mT3HCrOebI/BZ0Fc
Y9aVTWF72WPxrrFubBo7wJ5mO1ifGO/ZPrYw3j/Wnd3CjrJF7Dc2ks1nu9mj
7DvWhU1l0+LdtL0sxmfX8ZZ08t16KitZj8S6ZKP/ayebn5V8j+K7dLm+v7GX
2X42hN3FDrFX4tvJhrK5p9c4b2Yl64JYH2yyv5/Ys2xnzLnjG6XuMHuVHWTD
2Dx2kD3DfmR92W1sinOsZ3tpjO3OeWpcT1GXLYlvD5sc91bf6/V9lC2Icdu7
WC2+/drb8LfUH7W/qjFPZ5ewRex3Vp3lZ23Z2+wYq8iOyRvF+M525yTzul+y
kvlMzGtOyquIvPq2jLFN3a8xnsZ3nrVgr7BfWOWYu7Pm7GWbP5+eI53KStZB
sR5KO+c58f3WvjrmIurvjHEz1oRsDWvP5sp/9f++pM8+NljbnHiPYmyO+bXo
HPMwbcfUva3usO3R7H51x9k77Agbwx5gv7O32CE2Kr7drK7jTI1xmBVnfdkv
6l5ke9ml7E72M3uO7WL92R2srf+tsfO5QGxlZ9lXu3QyJ2uVSeZ8MfeL+XMd
NZfzcaKUtmasJhsj36jvmfp1TCfrrDaZZP4e8/hYF8f6uKraRnGfc5P3K96z
BvKGcZ9Zh3Qyr78kk6zZYu3WPp3MN1tnkrl/rAEuZ3+xWvEc2cdBdgU7Ia8t
FrCfWKd0snZom0nWdrHGu5JlOV59/oS6Q6xHOpkjd8kk69ZYv05g+dQ1iO+8
uiPxPWdPZCVr0libzmDd0smcsVMmmZfH/Lx7Opmbd84kc/CYi2937WdnJe9C
vBMj2BY2OcZ1Von1zknejxuykrVHrEEWuy5t7e89tkc+SN3DOcka4l62kq0Q
n6vbxe7LSp7JeDavUNda3+fj/rBObBb7Muav8R2PtZYYG9df3QtZybMYz+Ts
nGQtNCMrWaPEWmWNY+xgc7KS9zze9+HquqaT+XXHTDKPjvl053Syjm6XSdbk
sTbvkk7W5e3Zu/L3RBv2Ottqf71jTsiasfvZO6wWG8+2Oe7MGB9YDTaI/R8A
ijbA
             "]], 
            
            Polygon3DBox[{{723, 722, 1133, 358, 343, 1126}, {1929, 1091, 707, 
             708, 1092, 1930}}]}, 
           Annotation[#, "Charting`Private`Tag$2356#1"]& ]], 
         Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.368417, 0.506779, 0.709798], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1: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
pfk9Vntys2ANP4z8k8FaeiT8RLAOHwHfF6zhe8MNgvvovvDZhX4e7lZPAD8D
PwzXD+6ve8mH0N4H99TvTfYvPoYfD9bww+F+mT2r1/WMBHtKA6VJgnVLf7hJ
sIc2QOcfff90f5vlnzn1yKcn+3TSBj9Fn5OekzrJXpJq6/3J3o3qYINkD0i1
r2GyX6OaWDfZJ1L9fSjZZ9He/kiyh6IaUTvZl5F+uDPZA1Itvj3ZH1HdvzvZ
M1IfXS/ZV1LtrpnsfUgzLIpe51rv9yT7Tard9ZO9JNXie5M9I9Xxr6Ovu67h
Xcn+kbRBrWRvRdrjgWQfTXVqd3TvpOufkn1b6dhvovsuXduvovsoPZM7o/1K
rYUd0R6K9OFhyd6u9POk6F5d++FkeHHO++e+6L5O9+7BZO9Jte/b6J5T9+6z
6F5Ra/bz6J5Qa6RRsu+jurknuvfT87Mr2mfUmv0iuvfTOtob3X/qmfwyum/U
M9kk2QtTvd4e7ftI696W7ElJJ1wAL8+576iS7BtK192Q7CdKp10Er8y5Z6mR
7GFJ/1wIr8i5x6mc7EtKKx6f7F9Lb5wPL8u5x7k+2TuTTqiU7E9JO92Y7FFK
i1ZL9kmlM69N9lilma9J9nzVCxyX7KFLO92c7KVKN96a7BVKT1ZP9kalS29K
9lWlaasm+63Sh/9J9sHVp5yQ7K1L55yY7NdLO50LL8m5tzoz2cuWzi+X7F9L
k5dN9q+lyU9N9r7VZ50HL825jyuT7KFLz5+W7HFLh5+T/Myovzs72YNW73ZK
sp8uTXh48jsA9U1HJ3uj0palkz19acVSyb6/dOAxyT6mtOhRyT6mdOMRye8b
1IudlPz+QBryyGTPWhr1EnhVzr3qumgfRP3UmmhvRdrs12gfTTXo52g/TjVr
ebQnqHrxS7QHpxq3Mtq7Ue34PfrdiXr8kdE+lGr0imhPR/Xit2ivTTXxj+j3
LvIH/hftL6jm/hn9nkZ+7KhoT0p1fB68Lmf91j/ai5Q2OxDtQWiP/THaY9I+
fzDaY9Lefijas9Ce/0O0x6f6Mhdem7Nu/Djar5SW6xvtjUp3tY/2baXrOkb7
ZdJsnaM9NWnXTtGemrRrj2jfTfWoXbRfrPrVNdojk7bsFu2pSeP1jPYWVbN6
R/ut0iRDov1H6Z+B0R6r9OeAaI9V+rNPtLcrPdMv2tuV5hwR7dNJFw2P9umk
f4ZF+7bSfoOjPURpqqHR/qw029poH039+F/R78/kn8yB1+SsPzdHe3PqnSdG
e53ShN9F+2iq799H+0eq++OjvUvpyenR+5I03oRoL1W+yuhor1P6bVO0N6fe
f0u0l62ed1u076aeYn20r6fef1W0Zyd9sjraH5RuGRPtpUoDT4le79K6U6PX
r7TrtOh9TBp1a7SXp/5lY7S3KJ/h7+h3ivKCxkX7ttLDM6L3SfUR8+H1Ofcd
s+HVOevzkPzuSn5IUfJ7OHkpWfL7LXksC5i/IedepjD5nZY8mVzyeyz1+CWT
3+fJSymR/D5Sfes/0e8+pSsWR3vB6o+KJ7/jlM8zM3qfl/beH+2tS3ctifam
pbsKkt+tyi8qlvzOVX7RwmiPWz3UsmiPWzqzfPJvlE/VPdrzlR67Ovkdm7yU
K5J/l7yLDtH9j3qcCsnPkvyusdF9i/qXy5LXuDyiy5OvpzyTq5Lf1clvuTL5
PZ98mEuT1698sE+i9bG0a8Xkd4ryYQZF92DqJXtF60jp/C7RvZ/6ylnRe6P6
l/8Dmewmbg==
             "]], 
            Polygon3DBox[CompressedData["
1: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
LbV3NTm1LjVTtVM1TnsFanZqd2p+9nbUCIt8fmqHapwpX5/3Ux+kL3JOG7vV
fNV+1UjtTagZqh12zPmVGq+9BGsYaxlzSHNJc2a1SnNoc2lzTLVNc2hzaXNU
tU9zVHNVayhrKTVItUg1R3tXakr2AtQ81ZrUdO09qJGq9erj9HX6THMt16Br
0TVoLmHNu3r+PeOrPn5e1tetBdQgpmZ9yHrQGPVX7he1lKE5TMt6ulqEPnFK
rjfUFtRTJud6Q71IDWN6ETmv2oY5qbmpNb31tTHR2GjM+6seMcpYZYwsyogp
xpYmeH49YtD8rI+ZuxkDjYXG0N/qETONncbIP+oRA42FxsBaGRrOK7l+Utsx
JhmbjKGtZcRQY6kxtCxD43m1iJxc7Ucf/nHWc83l9fH6ejUvc39r5A4palZr
Z2tateNOeX5aw+6Soia3trXG3SbPR+eLNex2KTQSa1tr+M3y/La2V8NYM0WN
r7ZhTb1tnn/W2vrYhXP+Z66oRrJ+Xk/mJ/YkN8jz016lMWRO1p+tJ40xc7Pe
aS1ijmOuYwxfsAxNZY08P9VarPHb5/XmfFWDWSuFZqA2o4azYQoNQG1HzWGj
FDW7WoQx3FhujLb2UOMz3o1Lof2pwRkfeqfQ5t4q4955T72315URK43hxvJr
y4jl5gDmAteUkQsYc4291pzWYkvXohZ9o4x77T30Xk4tozb1GfmsppVRa5kv
WUvZ41knRQ/G3s9070FL1GTWZsaUSbk+tf48vop6056L+uQxVdT6arDqf0dX
oU2oAagFHFVFv1DNwnriOPiD5ugZqZceW8XadI2qr55cxbPzGapnnlSF/mlP
Qb3zhCrqHXtC6qUnVqFX2jNSL5xRRq1vTWhteGy+/jVqoQW8Ce/eEnPSuXl9
GbmDOYq5yitlzE3ngHPh1TLmvnPWuftavt+uCdeGPfAtUtQk9sbPZ7umJTQb
9RJ73Pa61bvshdtjsPdgT87egz1Fe4v2KO11W1OrjZS1qLWnGANbYo451yaX
Mdecg87Fl8qY+64J18aLeX/nrHP39TLWkmvStanmYj30awot5oUy5rZr0LVo
D7pjih6/vemXy5jrrjHX2nNlrBV9rr73+TLWrmvItXQIz+Ot5tBk1CPsgdh7
tIdqb+TQKrQaNSHr1cOq0IbUdNR29qtCj1DzVfvdF57UHBqsWuz+Vegvavhq
+dbErxcxx6yVD6pC61NTUVvxfQRzs9M4h1tbo8e4fIoeh71He0QHp+jR2Dva
owr9RM1M/aMj3L85cjxzvU5V5GrmbGoze8KjmkPzUT/pV8X7GHuk6C/3reL9
it1T9Jf7VHFvd0vRn96rCq1IjUitSE2mZxHnoFazTxV6jZqQ2pDXoGboOxZe
mz34CUX0xO3Nq/l0L+IdCrWg3aq4fnt06lkHVjFWTVRt9OAq1rZrXO304ir0
PHs29m4uqkIv8B0S3yW5tIrYZQxTT7iwCn3dHra97EuqiGXGNHt1/61Cv7AH
aP/j1Cr6Cfac1B+OqCLWGnPVAg+vItYac9X+Lqiif+I7Ab4bcH4V/RV7QvaG
Tq8iVhmz1DvOqaI/Yo/dXvvZVfQT7CnZWzqziv6KPVx7uedWkSuYM9irP6uK
fow9NHtpnavo79gTtjd8WhX9jg+L0DvPgL9rjh6wveBTqtBP7Cnbb7AH1qOI
msXemD1Ae4H2IO0leowPc7xVS+3GdlFLaMKzyphDziU1Dt9dUONQ67Dm9d0G
a159uT5dPd0e8E45Pvuugj213nk+OR/sMdtrtkfiu0b24OzF+c6AvciRVfgq
NV+1X/tnrjXXnPrlvWXkDuYc5h7WONY61iRqZ93KyI3MqcytrHmsfaxR7P08
W0atYE1hbeGacG24ZnwXo3P23+1roVXfb47aHDmXuZc9651zvqHeZ0/e3rw9
Rd9tmMS2XkvUJNYmrjHXmmvQd0PsodpLVaPz3SB7ur4roX5or3dmGVr3Pz2K
RvSk7U2rqfuuljWZtZn9Q7VO31nqkus/16Ma+sjm0OjU6tTTD2sJTU9tb5cq
nq1r2LVsj8pele8Y2Hu2523vW83Rd4/uK6M+N2czd/OdJ999UrP03auuZeSu
xk9zXXvq9tbVOH2XyZ6ssdB76r21BrQWtCa192VNaW1pzak2a01pbWnNqZZq
z93euz0G3336P34rKQw=
             "]], 
            Polygon3DBox[CompressedData["
1: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
2GvYMGwSNgkbEGdebCW2MdYN7P8nN1mF
             "]]}, Annotation[#, "Charting`Private`Tag$2356#2"]& ]], 
         Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[{246, 1, 242, 227, 1605, 16, 1619, 31, 1634, 46, 1943, 265, 
         380}], 
        Line3DBox[{657, 2, 1081, 234, 246}], 
        Line3DBox[{659, 3, 657}], 
        Line3DBox[{661, 4, 659}], 
        Line3DBox[{663, 5, 661}], 
        Line3DBox[{665, 6, 663}], 
        Line3DBox[{667, 7, 665}], 
        Line3DBox[{669, 8, 667}], 
        Line3DBox[{673, 9, 670, 669}], 
        Line3DBox[{675, 10, 673}], 
        Line3DBox[{677, 11, 675}], 
        Line3DBox[{679, 12, 677}], 
        Line3DBox[{681, 13, 679}], 
        Line3DBox[{683, 14, 681}], 
        Line3DBox[{247, 15, 243, 235, 683}], 
        Line3DBox[{1632, 30, 1912, 229, 247}], 
        Line3DBox[{1647, 45, 1632}], 
        Line3DBox[CompressedData["
1:eJwV0L8uA1AYh+FPNO0FdDD3LiyuQKeOlTTRqmpRK12MDGLUQYw1SJi4ApKK
EVVVf5dqEzZSNo/hzfNLznLOyRTXcvWJiMhpypjhZjIiy13O8YA1HvNEG/YV
t9ljk0MecswzJlMRF2zwnT+60Zc+ND8ZccsiOyzxjgvsssx7LrLHCh+4xKr6
do2PXOYTV/jMVb6wzldOJyJG/NWbvvWpjLtdM81zJnj6f+4NLQ64xy63eMm2
1u0jVrnPPHc4y4I//AOgfTVF
         "]], 
        Line3DBox[{1661, 60, 1647}], 
        Line3DBox[{294, 278, 1661}]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0kcuhkEcwOEh2ka5AGKPC2DDDis7JHr99B4R0SLRiYhePt0BcAFcACux
wQUIe54vFr88809m3kwmb05DT0V3XAhhVkvxIWwZ5jiqneQQLsyXvOEt7/nA
Jz7znR/84jd/FJzNSAkhndnMYj7zWMRClrOM1aziK8e5onYtaFo1iSFEWMsO
1rGT9exiA7vZyB42sZfNbFGfdSv72caB2Pc5yAiH2MFhFieFMMFVjWhRMxp2
t7bYeVaykqUsZQELmMtcZjKTaUxjqn69zad3+eQb3/jIR97xjte85ov9Y84u
69w8zyldJYRwZr7gKc94whMeM8ooD3nEPe7q0HqbB9zkPje4x/XYHq5xhyvc
Zol3mIz//x/+AADuR4o=
         "]]}, {}, {
        GrayLevel[0.2], 
        Line3DBox[{1605, 1911, 879, 1604, 2485, 1826, 1606, 2486, 1827, 1607, 
         2487, 1828, 1608, 2488, 1829, 1609, 2489, 1830, 1610, 2490, 1831, 
         1611, 2491, 2270, 2583, 1612, 2492, 1832, 1613, 2493, 1833, 1614, 
         2494, 1834, 1615, 2495, 1835, 1616, 2496, 1836, 1617, 2371, 2497, 
         1837, 1912}], 
        Line3DBox[{1619, 2271, 2584, 1618, 894, 1620, 2498, 1838, 1621, 2499, 
         1839, 1622, 2500, 1840, 1623, 2501, 1841, 1624, 2502, 1842, 1625, 
         2503, 2272, 2585, 1626, 2273, 2586, 1627, 2504, 1843, 1628, 2505, 
         1844, 1629, 2506, 1845, 1630, 2507, 1846, 1631, 2508, 1847, 1632}], 
        Line3DBox[{1634, 2274, 2587, 1633, 2275, 2588, 1635, 910, 1636, 2509, 
         1848, 1637, 2510, 1849, 1638, 2511, 1850, 1639, 2512, 1851, 1640, 
         2513, 2276, 2589, 1641, 2277, 2590, 1642, 2278, 2591, 1643, 2514, 
         1852, 1644, 2515, 1853, 1645, 2516, 1854, 1646, 2517, 1855, 1647}], 
        Line3DBox[{1661, 1942, 1941, 2693, 1660, 1940, 1939, 2692, 1659, 1938,
          1937, 2691, 1658, 2700, 1936, 1935, 1657, 2699, 1934, 1933, 1656, 
         2698, 1932, 1931, 1655, 2697, 1930, 1929, 2690, 1654, 1928, 1927, 
         2689, 1653, 1926, 1925, 2688, 1652, 1924, 1923, 2687, 1651, 1922, 
         1085, 1650, 2696, 1921, 1920, 1649, 2695, 1919, 1918, 1648, 2694, 
         1917, 1916, 1943}], 
        Line3DBox[{1663, 2279, 2592, 1662, 2280, 2593, 1664, 2281, 2594, 1665,
          2282, 2595, 1666, 929, 1667, 2518, 1856, 1668, 2519, 1857, 1669, 
         2520, 2283, 2596, 1670, 2284, 2597, 1671, 2285, 2598, 1672, 2286, 
         2599, 1673, 2287, 2600, 1674, 2521, 1858, 1675, 2522, 1859, 1676}], 
        Line3DBox[{1678, 2288, 2601, 1677, 2289, 2602, 1679, 2290, 2603, 1680,
          2291, 2604, 1681, 2292, 2605, 1682, 945, 1683, 2523, 1860, 1684, 
         2524, 2293, 2606, 1685, 2294, 2607, 1686, 2295, 2608, 1687, 2296, 
         2609, 1688, 2297, 2610, 1689, 2298, 2611, 1690, 2525, 1861, 1691}], 
        Line3DBox[{1693, 2299, 2612, 1692, 2300, 2613, 1694, 2301, 2614, 1695,
          2302, 2615, 1696, 2303, 2616, 1697, 2304, 2617, 1698, 961, 1699, 
         2526, 2305, 2618, 1700, 2306, 2619, 1701, 2307, 2620, 1702, 2308, 
         2621, 1703, 2309, 2622, 1704, 2310, 2623, 1705, 2311, 2624, 1706}], 
        Line3DBox[{1710, 2527, 1862, 1708, 2528, 1863, 1712, 2529, 1864, 1714,
          2530, 1865, 1716, 2531, 1866, 1718, 2532, 1867, 1720, 2533, 1868, 
         1722, 2534, 978, 1724, 2535, 1869, 1726, 2536, 1870, 1728, 2537, 
         1871, 1730, 2538, 1872, 1732, 2539, 1873, 1734, 2540, 1874, 1736}], 
        Line3DBox[{1735, 2638, 2324, 1733, 2637, 2323, 1731, 2636, 2322, 1729,
          2635, 2321, 1727, 2634, 2320, 1725, 2633, 2319, 1723, 2632, 977, 
         1721, 2631, 2318, 1719, 2630, 2317, 1717, 2629, 2316, 1715, 2628, 
         2315, 1713, 2627, 2314, 1711, 2626, 2313, 1707, 2625, 2312, 1709}], 
        Line3DBox[{1738, 2325, 2639, 1737, 2541, 1875, 1739, 2542, 1876, 1740,
          2543, 1877, 1741, 2544, 1878, 1742, 2545, 1879, 1743, 2546, 1880, 
         1744, 2547, 2326, 2640, 1745, 2327, 2641, 1746, 2548, 1881, 1747, 
         2549, 1882, 1748, 2550, 1883, 1749, 2551, 1884, 1750, 2552, 1885, 
         1751}], 
        Line3DBox[{1753, 2328, 2642, 1752, 2329, 2643, 1754, 2553, 1886, 1755,
          2554, 1887, 1756, 2555, 1888, 1757, 2556, 1889, 1758, 2557, 1890, 
         1759, 2558, 2330, 2644, 1760, 2331, 2645, 1761, 2332, 2646, 1762, 
         2559, 1891, 1763, 2560, 1892, 1764, 2561, 1893, 1765, 2562, 1894, 
         1766}], 
        Line3DBox[{1768, 2333, 2647, 1767, 2334, 2648, 1769, 2335, 2649, 1770,
          2563, 1895, 1771, 2564, 1896, 1772, 2565, 1897, 1773, 2566, 1898, 
         1774, 2567, 2336, 2650, 1775, 2337, 2651, 1776, 2338, 2652, 1777, 
         2339, 2653, 1778, 2568, 1899, 1779, 2569, 1900, 1780, 2570, 1901, 
         1781}], 
        Line3DBox[{1783, 2340, 2654, 1782, 2341, 2655, 1784, 2342, 2656, 1785,
          2343, 2657, 1786, 2571, 1902, 1787, 2572, 1903, 1788, 2573, 1904, 
         1789, 2574, 2344, 2658, 1790, 2345, 2659, 1791, 2346, 2660, 1792, 
         2347, 2661, 1793, 2348, 2662, 1794, 2575, 1905, 1795, 2576, 1906, 
         1796}], 
        Line3DBox[{1798, 2349, 2663, 1797, 2350, 2664, 1799, 2351, 2665, 1800,
          2352, 2666, 1801, 2353, 2667, 1802, 2577, 1907, 1803, 2578, 1908, 
         1804, 2579, 2354, 2668, 1805, 2355, 2669, 1806, 2356, 2670, 1807, 
         2357, 2671, 1808, 2358, 2672, 1809, 2359, 2673, 1810, 2580, 1909, 
         1811}], 
        Line3DBox[{1825, 1915, 2686, 2373, 1824, 2685, 2370, 1823, 2684, 2369,
          1822, 2683, 2368, 1821, 2682, 2367, 1820, 2681, 2366, 1819, 2680, 
         2365, 2582, 1818, 1910, 2581, 1817, 2679, 2364, 1816, 2678, 2363, 
         1815, 2677, 2362, 1814, 2676, 2361, 1813, 2675, 2360, 1812, 2372, 
         2674, 1913, 1914}], 
        Line3DBox[{1945, 2265, 2374, 2701, 1944, 2809, 2167, 1946, 2810, 2168,
          1947, 2811, 2169, 1948, 2812, 2170, 1949, 2813, 2171, 1950, 2814, 
         2172, 1951, 2815, 2375, 2702, 1952, 2816, 2173, 1953, 2817, 2174, 
         1954, 2818, 2175, 1955, 2819, 2176, 1956, 2820, 2177, 1957, 2482, 
         2921, 2178, 2266}], 
        Line3DBox[{1959, 2376, 2703, 1958, 2377, 2704, 1960, 2821, 2179, 1961,
          2822, 2180, 1962, 2823, 2181, 1963, 2824, 2182, 1964, 2825, 2183, 
         1965, 2826, 2378, 2705, 1966, 2379, 2706, 1967, 2827, 2184, 1968, 
         2828, 2185, 1969, 2829, 2186, 1970, 2830, 2187, 1971, 2831, 2188, 
         1972}], 
        Line3DBox[{1974, 2380, 2707, 1973, 2381, 2708, 1975, 1419, 1976, 2832,
          2189, 1977, 2833, 2190, 1978, 2834, 2191, 1979, 2835, 2192, 1980, 
         2836, 2382, 2709, 1981, 2383, 2710, 1982, 2384, 2711, 1983, 2837, 
         2193, 1984, 2838, 2194, 1985, 2839, 2195, 1986, 2840, 2196, 1987}], 
        Line3DBox[{1989, 2385, 2712, 1988, 2386, 2713, 1990, 2387, 2714, 1991,
          1435, 1992, 2841, 2197, 1993, 2842, 2198, 1994, 2843, 2199, 1995, 
         2844, 2388, 2715, 1996, 2389, 2716, 1997, 2390, 2717, 1998, 2391, 
         2718, 1999, 2845, 2200, 2000, 2846, 2201, 2001, 2847, 2202, 2002}], 
        Line3DBox[{2004, 2392, 2719, 2003, 2393, 2720, 2005, 2394, 2721, 2006,
          2395, 2722, 2007, 2396, 2723, 2008, 2848, 2203, 2009, 2849, 2204, 
         2010, 2850, 2397, 2724, 2011, 2398, 2725, 2012, 2399, 2726, 2013, 
         2400, 2727, 2014, 2401, 2728, 2015, 2851, 2205, 2016, 2852, 2206, 
         2017}], 
        Line3DBox[{2019, 2402, 2729, 2018, 2403, 2730, 2020, 2404, 2731, 2021,
          2405, 2732, 2022, 2406, 2733, 2023, 2407, 2734, 2024, 2853, 2207, 
         2025, 2854, 2408, 2735, 2026, 2409, 2736, 2027, 2410, 2737, 2028, 
         2411, 2738, 2029, 2412, 2739, 2030, 2413, 2740, 2031, 2855, 2208, 
         2032}], 
        Line3DBox[{2036, 2856, 2209, 2034, 2857, 2210, 2038, 2858, 2211, 2040,
          2859, 2212, 2042, 2860, 2213, 2044, 2861, 2214, 2046, 2862, 2215, 
         2048, 2864, 2865, 2216, 2050, 2866, 2217, 2052, 2867, 2218, 2054, 
         2868, 2219, 2056, 2869, 2220, 2058, 2870, 2221, 2060, 2871, 2222, 
         2062}], 
        Line3DBox[{2061, 2754, 2427, 2059, 2753, 2426, 2057, 2752, 2425, 2055,
          2751, 2424, 2053, 2750, 2423, 2051, 2749, 2422, 2049, 2748, 2421, 
         2863, 2047, 2747, 2420, 2045, 2746, 2419, 2043, 2745, 2418, 2041, 
         2744, 2417, 2039, 2743, 2416, 2037, 2742, 2415, 2033, 2741, 2414, 
         2035}], 
        Line3DBox[{2064, 2428, 2755, 2063, 2872, 2223, 2065, 2873, 2224, 2066,
          2874, 2225, 2067, 2875, 2226, 2068, 2876, 2227, 2069, 2877, 2228, 
         2070, 2878, 2429, 2756, 2071, 2879, 2229, 2072, 2880, 2230, 2073, 
         2881, 2231, 2074, 2882, 2232, 2075, 2883, 2233, 2076, 2884, 2234, 
         2077}], 
        Line3DBox[{2079, 2430, 2757, 2078, 2431, 2758, 2080, 2885, 2235, 2081,
          2886, 2236, 2082, 2887, 2237, 2083, 2888, 2238, 2084, 2889, 2239, 
         2085, 2890, 2432, 2759, 2086, 2433, 2760, 2087, 2891, 2240, 2088, 
         2892, 2241, 2089, 2893, 2242, 2090, 2894, 2243, 2091, 2895, 2244, 
         2092}], 
        Line3DBox[{2094, 2434, 2761, 2093, 2435, 2762, 2095, 2436, 2763, 2096,
          2896, 2245, 2097, 2897, 2246, 2098, 2898, 2247, 2099, 2899, 2248, 
         2100, 2900, 2437, 2764, 2101, 2438, 2765, 2102, 2439, 2766, 2103, 
         2901, 2249, 2104, 2902, 2250, 2105, 2903, 2251, 2106, 2904, 2252, 
         2107}], 
        Line3DBox[{2109, 2440, 2767, 2108, 2441, 2768, 2110, 2442, 2769, 2111,
          2443, 2770, 2112, 2905, 2253, 2113, 2906, 2254, 2114, 2907, 2255, 
         2115, 2908, 2444, 2771, 2116, 2445, 2772, 2117, 2446, 2773, 2118, 
         2447, 2774, 2119, 2909, 2256, 2120, 2910, 2257, 2121, 2911, 2258, 
         2122}], 
        Line3DBox[{2124, 2448, 2775, 2123, 2449, 2776, 2125, 2450, 2777, 2126,
          2451, 2778, 2127, 2452, 2779, 2128, 2912, 2259, 2129, 2913, 2260, 
         2130, 2914, 2453, 2780, 2131, 2454, 2781, 2132, 2455, 2782, 2133, 
         2456, 2783, 2134, 2457, 2784, 2135, 2915, 2261, 2136, 2916, 2262, 
         2137}], 
        Line3DBox[{2139, 2458, 2785, 2138, 2459, 2786, 2140, 2460, 2787, 2141,
          2461, 2788, 2142, 2462, 2789, 2143, 2463, 2790, 2144, 2917, 2263, 
         2145, 2918, 2464, 2791, 2146, 2465, 2792, 2147, 2466, 2793, 2148, 
         2467, 2794, 2149, 2468, 2795, 2150, 2469, 2796, 2151, 2919, 2264, 
         2152}], 
        Line3DBox[{2166, 2269, 2923, 2484, 2165, 2808, 2481, 2164, 2807, 2480,
          2163, 2806, 2479, 2162, 2805, 2478, 2161, 2804, 2477, 2160, 2803, 
         2476, 2920, 2159, 2802, 2475, 2158, 2801, 2474, 2157, 2800, 2473, 
         2156, 2799, 2472, 2155, 2798, 2471, 2154, 2797, 2470, 2153, 2483, 
         2922, 2267, 2268}]}, {
        GrayLevel[0.2], 
        Line3DBox[{657, 880, 2485, 658, 894, 686, 2588, 909, 701, 1083, 2695, 
         1101, 1115, 1156}], 
        Line3DBox[{659, 881, 2486, 660, 895, 2498, 687, 910, 702, 1084, 2696, 
         1102, 1116, 1129, 1135}], 
        Line3DBox[{661, 882, 2487, 662, 896, 2499, 688, 911, 2509, 703, 1085, 
         1103, 1086, 1136}], 
        Line3DBox[{663, 883, 2488, 664, 897, 2500, 689, 912, 2510, 704, 1087, 
         2687, 1104, 1088, 1137}], 
        Line3DBox[{665, 884, 2489, 666, 898, 2501, 690, 913, 2511, 705, 1089, 
         2688, 1105, 1143}], 
        Line3DBox[{667, 885, 2490, 668, 899, 2502, 691, 914, 2512, 706, 1090, 
         2689, 1106, 1120, 1158}], 
        Line3DBox[{669, 886, 2491, 671, 900, 2503, 692, 915, 2513, 707, 1091, 
         2690, 1107, 1121, 1159}], 
        Line3DBox[{673, 888, 2492, 674, 2586, 902, 694, 2590, 917, 709, 1093, 
         2698, 1109, 1117, 1157}], 
        Line3DBox[{675, 889, 2493, 676, 903, 2504, 695, 2591, 918, 710, 1094, 
         2699, 1110, 1118, 1130, 1138}], 
        Line3DBox[{677, 890, 2494, 678, 904, 2505, 696, 919, 2514, 711, 1095, 
         2700, 1111, 1119, 1131, 1139}], 
        Line3DBox[{679, 891, 2495, 680, 905, 2506, 697, 920, 2515, 712, 1096, 
         2691, 1112, 1097, 1140}], 
        Line3DBox[{681, 892, 2496, 682, 906, 2507, 698, 921, 2516, 713, 1098, 
         2692, 1113, 1144}], 
        Line3DBox[{683, 1075, 1076, 2497, 684, 907, 2508, 699, 922, 2517, 714,
          1099, 2693, 1114, 1122, 1160}], 
        Line3DBox[{865, 1060, 1077, 2674, 850, 1045, 2663, 835, 1030, 2654, 
         820, 1015, 2647, 805, 1000, 2642, 790, 985, 2639, 775, 2527, 970, 
         2625, 760, 955, 2612, 745, 940, 2601, 730, 925, 2592, 715, 1123, 923,
          1151}], 
        Line3DBox[{866, 1061, 2675, 851, 1046, 2664, 836, 1031, 2655, 821, 
         1016, 2648, 806, 1001, 2643, 791, 2541, 986, 776, 2528, 971, 2626, 
         761, 956, 2613, 746, 941, 2602, 731, 926, 2593, 716, 1124, 1161}], 
        Line3DBox[{867, 1062, 2676, 852, 1047, 2665, 837, 1032, 2656, 822, 
         1017, 2649, 807, 2553, 1002, 792, 2542, 987, 777, 2529, 972, 2627, 
         762, 957, 2614, 747, 942, 2603, 732, 927, 2594, 717, 1125, 1162}], 
        Line3DBox[{868, 1063, 2677, 853, 1048, 2666, 838, 1033, 2657, 823, 
         2563, 1018, 808, 2554, 1003, 793, 2543, 988, 778, 2530, 973, 2628, 
         763, 958, 2615, 748, 943, 2604, 733, 928, 2595, 718, 1145}], 
        Line3DBox[{869, 1064, 2678, 854, 1049, 2667, 839, 2571, 1034, 824, 
         2564, 1019, 809, 2555, 1004, 794, 2544, 989, 779, 2531, 974, 2629, 
         764, 959, 2616, 749, 944, 2605, 734, 929, 719, 1146}], 
        Line3DBox[{870, 1065, 2679, 855, 2577, 1050, 840, 2572, 1035, 825, 
         2565, 1020, 810, 2556, 1005, 795, 2545, 990, 780, 2532, 975, 2630, 
         765, 960, 2617, 750, 945, 735, 2518, 930, 720, 1147}], 
        Line3DBox[{871, 2581, 1066, 856, 2578, 1051, 841, 2573, 1036, 826, 
         2566, 1021, 811, 2557, 1006, 796, 2546, 991, 781, 2533, 976, 2631, 
         766, 961, 751, 2523, 946, 736, 2519, 931, 721, 1132, 1153}], 
        Line3DBox[{873, 1068, 2680, 858, 1053, 2668, 843, 1038, 2658, 828, 
         1023, 2650, 813, 1008, 2644, 798, 993, 2640, 783, 978, 2632, 768, 
         963, 2618, 753, 948, 2606, 738, 933, 2596, 723, 1126, 924, 1152}], 
        Line3DBox[{874, 1069, 2681, 859, 1054, 2669, 844, 1039, 2659, 829, 
         1024, 2651, 814, 1009, 2645, 799, 994, 2641, 784, 2535, 979, 2633, 
         769, 964, 2619, 754, 949, 2607, 739, 934, 2597, 724, 1127, 1163}], 
        Line3DBox[{875, 1070, 2682, 860, 1055, 2670, 845, 1040, 2660, 830, 
         1025, 2652, 815, 1010, 2646, 800, 2548, 995, 785, 2536, 980, 2634, 
         770, 965, 2620, 755, 950, 2608, 740, 935, 2598, 725, 1128, 1164}], 
        Line3DBox[{876, 1071, 2683, 861, 1056, 2671, 846, 1041, 2661, 831, 
         1026, 2653, 816, 2559, 1011, 801, 2549, 996, 786, 2537, 981, 2635, 
         771, 966, 2621, 756, 951, 2609, 741, 936, 2599, 726, 1148}], 
        Line3DBox[{877, 1072, 2684, 862, 1057, 2672, 847, 1042, 2662, 832, 
         2568, 1027, 817, 2560, 1012, 802, 2550, 997, 787, 2538, 982, 2636, 
         772, 967, 2622, 757, 952, 2610, 742, 937, 2600, 727, 1149}], 
        Line3DBox[{878, 1073, 2685, 863, 1058, 2673, 848, 2575, 1043, 833, 
         2569, 1028, 818, 2561, 1013, 803, 2551, 998, 788, 2539, 983, 2637, 
         773, 968, 2623, 758, 953, 2611, 743, 2521, 938, 728, 1150}], 
        Line3DBox[{1080, 1079, 1078, 2686, 864, 2580, 1059, 849, 2576, 1044, 
         834, 2570, 1029, 819, 2562, 1014, 804, 2552, 999, 789, 2540, 984, 
         2638, 774, 969, 2624, 759, 2525, 954, 744, 2522, 939, 729, 1134, 
         1155}], 
        Line3DBox[{1081, 1074, 879, 656, 2584, 893, 685, 2587, 908, 700, 1082,
          2694, 1100, 1141}], 
        Line3DBox[{1142, 1108, 2697, 1092, 708, 916, 2589, 693, 901, 2585, 
         672, 887, 2583, 670}], 
        Line3DBox[{1154, 1133, 722, 932, 2520, 737, 947, 2524, 752, 962, 2526,
          767, 977, 2534, 782, 992, 2547, 797, 1007, 2558, 812, 1022, 2567, 
         827, 1037, 2574, 842, 1052, 2579, 857, 1067, 2582, 872}], 
        Line3DBox[{1166, 1389, 2809, 1167, 2704, 1403, 1195, 2708, 1418, 1210,
          2713, 1433, 1225, 2720, 1448, 1240, 2730, 1463, 1255, 2742, 1478, 
         2857, 1270, 1493, 2872, 1285, 2758, 1508, 1300, 2762, 1523, 1315, 
         2768, 1538, 1330, 2776, 1553, 1345, 2786, 1568, 1360, 2797, 1583, 
         1375}], 
        Line3DBox[{1168, 1390, 2810, 1169, 1404, 2821, 1196, 1419, 1211, 2714,
          1434, 1226, 2721, 1449, 1241, 2731, 1464, 1256, 2743, 1479, 2858, 
         1271, 1494, 2873, 1286, 1509, 2885, 1301, 2763, 1524, 1316, 2769, 
         1539, 1331, 2777, 1554, 1346, 2787, 1569, 1361, 2798, 1584, 1376}], 
        Line3DBox[{1170, 1391, 2811, 1171, 1405, 2822, 1197, 1420, 2832, 1212,
          1435, 1227, 2722, 1450, 1242, 2732, 1465, 1257, 2744, 1480, 2859, 
         1272, 1495, 2874, 1287, 1510, 2886, 1302, 1525, 2896, 1317, 2770, 
         1540, 1332, 2778, 1555, 1347, 2788, 1570, 1362, 2799, 1585, 1377}], 
        Line3DBox[{1172, 1392, 2812, 1173, 1406, 2823, 1198, 1421, 2833, 1213,
          1436, 2841, 1228, 2723, 1451, 1243, 2733, 1466, 1258, 2745, 1481, 
         2860, 1273, 1496, 2875, 1288, 1511, 2887, 1303, 1526, 2897, 1318, 
         1541, 2905, 1333, 2779, 1556, 1348, 2789, 1571, 1363, 2800, 1586, 
         1378}], 
        Line3DBox[{1174, 1393, 2813, 1175, 1407, 2824, 1199, 1422, 2834, 1214,
          1437, 2842, 1229, 1452, 2848, 1244, 2734, 1467, 1259, 2746, 1482, 
         2861, 1274, 1497, 2876, 1289, 1512, 2888, 1304, 1527, 2898, 1319, 
         1542, 2906, 1334, 1557, 2912, 1349, 2790, 1572, 1364, 2801, 1587, 
         1379}], 
        Line3DBox[{1176, 1394, 2814, 1177, 1408, 2825, 1200, 1423, 2835, 1215,
          1438, 2843, 1230, 1453, 2849, 1245, 1468, 2853, 1260, 2747, 1483, 
         2862, 1275, 1498, 2877, 1290, 1513, 2889, 1305, 1528, 2899, 1320, 
         1543, 2907, 1335, 1558, 2913, 1350, 1573, 2917, 1365, 2802, 1588, 
         1380}], 
        Line3DBox[{1178, 1395, 2815, 1180, 1409, 2826, 1201, 1424, 2836, 1216,
          1439, 2844, 1231, 1454, 2850, 1246, 1469, 2854, 1261, 1484, 2863, 
         2864, 1276, 1499, 2878, 1291, 1514, 2890, 1306, 1529, 2900, 1321, 
         1544, 2908, 1336, 1559, 2914, 1351, 1574, 2918, 1366, 1589, 2920, 
         1381}], 
        Line3DBox[{1182, 1397, 2816, 1183, 2706, 1411, 1203, 2710, 1426, 1218,
          2716, 1441, 1233, 2725, 1456, 1248, 2736, 1471, 1263, 2749, 1486, 
         2866, 1278, 1501, 2879, 1293, 2760, 1516, 1308, 2765, 1531, 1323, 
         2772, 1546, 1338, 2781, 1561, 1353, 2792, 1576, 1368, 2804, 1591, 
         1383}], 
        Line3DBox[{1184, 1398, 2817, 1185, 1412, 2827, 1204, 2711, 1427, 1219,
          2717, 1442, 1234, 2726, 1457, 1249, 2737, 1472, 1264, 2750, 1487, 
         2867, 1279, 1502, 2880, 1294, 1517, 2891, 1309, 2766, 1532, 1324, 
         2773, 1547, 1339, 2782, 1562, 1354, 2793, 1577, 1369, 2805, 1592, 
         1384}], 
        Line3DBox[{1186, 1399, 2818, 1187, 1413, 2828, 1205, 1428, 2837, 1220,
          2718, 1443, 1235, 2727, 1458, 1250, 2738, 1473, 1265, 2751, 1488, 
         2868, 1280, 1503, 2881, 1295, 1518, 2892, 1310, 1533, 2901, 1325, 
         2774, 1548, 1340, 2783, 1563, 1355, 2794, 1578, 1370, 2806, 1593, 
         1385}], 
        Line3DBox[{1188, 1400, 2819, 1189, 1414, 2829, 1206, 1429, 2838, 1221,
          1444, 2845, 1236, 2728, 1459, 1251, 2739, 1474, 1266, 2752, 1489, 
         2869, 1281, 1504, 2882, 1296, 1519, 2893, 1311, 1534, 2902, 1326, 
         1549, 2909, 1341, 2784, 1564, 1356, 2795, 1579, 1371, 2807, 1594, 
         1386}], 
        Line3DBox[{1190, 1401, 2820, 1191, 1415, 2830, 1207, 1430, 2839, 1222,
          1445, 2846, 1237, 1460, 2851, 1252, 2740, 1475, 1267, 2753, 1490, 
         2870, 1282, 1505, 2883, 1297, 1520, 2894, 1312, 1535, 2903, 1327, 
         1550, 2910, 1342, 1565, 2915, 1357, 2796, 1580, 1372, 2808, 1595, 
         1387}], 
        Line3DBox[{1192, 1597, 1598, 2921, 1193, 1416, 2831, 1208, 1431, 2840,
          1223, 1446, 2847, 1238, 1461, 2852, 1253, 1476, 2855, 1268, 2754, 
         1491, 2871, 1283, 1506, 2884, 1298, 1521, 2895, 1313, 1536, 2904, 
         1328, 1551, 2911, 1343, 1566, 2916, 1358, 1581, 2919, 1373, 2923, 
         1600, 1601, 1602}], 
        Line3DBox[{1374, 1582, 1599, 2922, 1359, 1567, 2785, 1344, 1552, 2775,
          1329, 1537, 2767, 1314, 1522, 2761, 1299, 1507, 2757, 1284, 1492, 
         2755, 1269, 2856, 1477, 2741, 1254, 1462, 2729, 1239, 1447, 2719, 
         1224, 1432, 2712, 1209, 1417, 2707, 1194, 1402, 2703, 1165, 1388, 
         2701, 1596, 1603}], 
        Line3DBox[{1382, 1590, 2803, 1367, 1575, 2791, 1352, 1560, 2780, 1337,
          1545, 2771, 1322, 1530, 2764, 1307, 1515, 2759, 1292, 1500, 2756, 
         1277, 2865, 1485, 2748, 1262, 1470, 2735, 1247, 1455, 2724, 1232, 
         1440, 2715, 1217, 1425, 2709, 1202, 1410, 2705, 1181, 1396, 2702, 
         1179}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
/h+LsrCz
      "]], Axes -> True, AxesLabel -> {None, None, None}, 
    AxesOrigin -> {Automatic, Automatic, Automatic}, BoxRatios -> {1, 1, 0.4},
     DisplayFunction -> Identity, FaceGrids -> None, FaceGridsStyle -> 
    Automatic, ImageSize -> {310.83078090972776`, 196.80307838080358`}, 
    ImageSizeRaw -> Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, PlotRange -> 
    NCache[{{0, Rational[1, 2] (3 - 3^Rational[1, 2])}, {
       0, 1 + Rational[1, 2] (-3 + 3^Rational[1, 2])}, {0.08493650505275842, 
       0.2320508075688772}}, {{0, 0.6339745962155614}, {
       0, 0.3660254037844386}, {0.08493650505275842, 0.2320508075688772}}], 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {-0.1240400070168391, -3.1647090062047187`, 
     1.1913148125940478`}, ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"f", "(", 
         RowBox[{"x", ",", "y"}], ")"}], 
       RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"2", " ", 
               SqrtBox["3"]}], "-", "3"}], ")"}]}]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666666], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[
                    0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9513637338006244`*^9},ExpressionUUID->"1f43a3ca-a857-4eae-8623-\
60e6f72fb549"]
}, Open  ]]
},
WindowSize->{1350, 677},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.3 Inherited,
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (2017\:5e749\:670810\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3121, 101, 289, "Input",ExpressionUUID->"dff0a867-89a8-41ba-aa00-44577d7dc8b5"],
Cell[3704, 125, 372, 13, 68, "Output",ExpressionUUID->"8f276be9-4b19-4ea3-bd16-de5431b4180f"],
Cell[4079, 140, 177728, 3023, 313, "Output",ExpressionUUID->"1f43a3ca-a857-4eae-8623-60e6f72fb549"]
}, Open  ]]
}
]
*)

